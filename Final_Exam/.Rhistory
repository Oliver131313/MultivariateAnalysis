))
# Clear workspace
rm(list=ls())
#install.packages("bayesGARCH")
#install.packages("tidyquant")
#install.packages("LaplacesDemon")
# Load packages
library(tidyverse)
library(ggthemes)
library(bayesGARCH)
library(tidyquant)
library(LaplacesDemon)
library(coda)
getSymbols("AMZN", from='2010-01-01', to='2021-12-11')
dates <- rownames(as.data.frame(AMZN))
amzn <- as_tibble(AMZN$AMZN.Adjusted)
head(amzn)
colnames(amzn) <- "a_close"
amzn$date <- dates
amzn <- amzn %>%
mutate(r = c(NA, (a_close[-1] - a_close[-length(a_close)]) / a_close[-length(a_close)])) %>%
na.omit()
head(amzn)
plot(amzn$r, type="l", ylab = "Daily returns")+
grid()
amzn %>%
ggplot(aes(x=r)) +
geom_histogram(aes(y=..density..)) +
geom_density() +
scale_x_continuous(breaks = seq(-0.2, 0.2, 0.05)) +
theme_economist_white()
qqnorm(amzn$r, pch=1, frame=TRUE)
qqline(amzn$r, col="blue", lwd=3)
amzn %>%
pivot_longer(-date) %>%
ggplot(aes(
x = as.Date(date),
y = value,
group = name
)) +
geom_line() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
labs(x= "Date", y="") +
facet_grid("name", scales = "free", labeller = as_labeller(c("a_close"="Adj. Close",
"r"="Daily Return"))) +
theme_bw() +
theme(strip.text.y = element_text(angle=0))
r <- as.vector(amzn$r)
prior.conditions <- function(psi) {
(psi[1] > 0) & (psi[2] >= 0) & (psi[3] >= 0) &
(psi[2] + psi[3] < 1)
}
s_0 <- 12500 # Burn-in
s_1 <- 12500
s <- s_0 + s_1
MCMC <-
bayesGARCH(r,
control = list(
n.chain = 2,
l.chain = s,
refresh = 2500,
digits = 5 #, addPriorConditions = prior.conditions
))
plot(MCMC)
n.burn <- burnin(MCMC$chain1, "BMK")
n.burn
print(coda::gelman.diag(MCMC, autoburnin = 8000))
1 - coda::rejectionRate(MCMC)
coda::autocorr.diag(MCMC)
smpl <- formSmpl(MCMC, l.bi = 5000,
batch.size = 2)
summary(smpl)
coda::autocorr.diag(smpl)
persistence <- unclass(smpl[, 2] + smpl[, 3])
hist(persistence)
median(persistence)
print(coda::gelman.diag(MCMC, autoburnin = 12500))
1 - coda::rejectionRate(MCMC)
coda::autocorr.diag(MCMC)
smpl <- formSmpl(MCMC, l.bi = 5000,
batch.size = 2)
smpl <- formSmpl(MCMC, l.bi = 12500,
batch.size = 2)
summary(smpl)
persistence <- unclass(smpl[, 2] + smpl[, 3])
hist(persistence)
median(persistence)
ESS(MCMc)
ESS(MCMC)
l1 = c(2, 0, 0, 0, -1 , -1)
l2 = c(0, 2, 0, -1, 1)
l3 = c(0, 0, 2, 3, -1)
l1 = c(2, 0, 0, -1, -1)
rbind(l1, l2, l3)
mat <- rbind(l1, l2, l3)
solve(mat)
matrix(c(2, 0, 0, -1, -1, 0, 0, 2, 0, -1, 1, 0, 0, 0, 2, 3, -1, 0, 1, 1, -3, 0, 0, -7, 1, -1, 1, 0, 0, 3), nrow=3, ncol=6, byrow=TRUE)
matrix(c(2, 0, 0, -1, -1, 0, 0, 2, 0, -1, 1, 0, 0, 0, 2, 3, -1, 0, 1, 1, -3, 0, 0, -7, 1, -1, 1, 0, 0, 3), nrow=5, ncol=6, byrow=TRUE)
mat <- matrix(c(2, 0, 0, -1, -1, 0, 0, 2, 0, -1, 1, 0, 0, 0, 2, 3, -1, 0, 1, 1, -3, 0, 0, -7, 1, -1, 1, 0, 0, 3), nrow=5, ncol=6, byrow=TRUE)
pracma::rref(mat)
setwd("C:/Users/kutis/OneDrive/School/1. Semester/Vicerozmerne statisticke metody/Exercises/MultivariateAnalysis/R_Seminars/03_PCA_PrincipalComponentsAnalysis")
load("Countries.RData")
source("C:/Users/kutis/OneDrive/School/1. Semester/Vicerozmerne statisticke metody/Exercises/MultivariateAnalysis/R_Seminars/03_PCA_PrincipalComponentsAnalysis/03_c_hw.R", echo=TRUE)
library(ggbiplot)
stan_p <- p$rotation * p$sdev
biplot(p,xlim=c(-1,1))
ggbiplot(p, scale=1)
setwd("C:/Users/kutis/OneDrive/School/1. Semester/Vicerozmerne statisticke metody/Exercises/MultivariateAnalysis/R_Seminars/04_FA_FactorAnalysis")
install.packages('rcom')
library(rcom)
comRegisterRegistry()
library(rcom)
comRegisterRegistry()
library(tidyverse)
library(psych)
library(tidyverse)
library(psych)
setwd("C:/Users/kutis/OneDrive/School/1. Semester/Vicerozmerne statisticke metody/Exercises/MultivariateAnalysis/Final_Exam")
library(tidyverse)
library(psych)
library(readxl)
desetiboj <- read_excel("Desetiboj.xlsx")
# Ukaz data
desetiboj
rowSums(desetiboj)
rowSums(desetiboj[, -"Cases"])
rowSums(desetiboj[, -1])
poradi <- tibble(names = desetiboj[, 1], points = rowSums(desetiboj[, -1]))
poradi\
poradi
poradi <- tibble(names = desetiboj[, 1], points = rowSums(desetiboj[, -1])) %>%
na.omit() %>%
arrange(points)
poradi
poradi %>% arrange(points)
poradi %>% arrange(desc(points))
poradi <- tibble(names = as.vector(desetiboj[, 1]), points = rowSums(desetiboj[, -1]))
poradi %>% arrange(desc(points))
as.vector(desetiboj[, 1])
poradi <- tibble(names = as.vector(desetiboj[, 1]), points = rowSums(desetiboj[, -1]))
poradi %>% arrange(desc(points))
desetiboj[, 1]
cbind(desetiboj[, 1], rowSums(desetiboj[, -1]))
poradi <- as_tibble(cbind(desetiboj[, 1], rowSums(desetiboj[, -1])))
# Zmena nazvu stlpcu
names(poradi) <- c("Mena", "Body")
poradi
poradi <- as_tibble(cbind(desetiboj[, 1], rowSums(desetiboj[, -1])))
# Zmena nazvu stlpcu
names(poradi) <- c("Mena", "Body")
poradi <- poradi %>% arrange(desc(body)) %>% na.omit()
poradi <- as_tibble(cbind(desetiboj[, 1], rowSums(desetiboj[, -1])))
# Zmena nazvu stlpcu
names(poradi) <- c("Mena", "Body")
poradi <- poradi %>% arrange(desc(body))
poradi
poradi <- poradi %>% na.omit()
poradi <- as_tibble(cbind(desetiboj[, 1], rowSums(desetiboj[, -1])))
# Zmena nazvu stlpcu
names(poradi) <- c("Mena", "Body")
poradi <- poradi %>% na.omit() %>% arrange(desc(Body))
poradi
names(desetiboj)
rm(list = ls())
library(tidyverse)
library(psych)
library(readxl)
library(DescTools)
library(ellipse)
library(car)
desetiboj <- read_excel("Desetiboj.xlsx")
# Ukaz data
desetiboj
poradi <- as_tibble(cbind(desetiboj[, 1], rowSums(desetiboj[, -1])))
# Zmena nazvu stlpcu
names(poradi) <- c("Mena", "Body")
poradi <- poradi %>% na.omit() %>% arrange(desc(Body))
poradi
plotcorr(desetiboj)
# Korelacna matice
x <- cor(desetiboj[, -1], use = "pairwise.complete.obs")
plotcorr(desetiboj)
# Korelacna matice
x <- cor(desetiboj[, -1], use = "pairwise.complete.obs")
plotcorr(x)
# Korelacna matice
x <- cor(desetiboj[, -1], use = "pairwise.complete.obs")
x
scatterplotMatrix(
desetiboj[, -1],
smooth = F,
diagonal = "histogram",
col = c(2, 1, 4)
)
PlotCorr(x)
PlotCorr(x)
PlotCorr(x)
? PlotCorr
library(tidyverse)
library(psych)
library(readxl)
library(DescTools)
library(ellipse)
library(car)
desetiboj <- read_excel("Desetiboj.xlsx")
desetiboj <- desetiboj %>% na.omit()
# Ukaz data
desetiboj
# Zbavenie sa chybajucich hodnot
desetiboj[desetiboj==0]
# Zbavenie sa chybajucich hodnot
desetiboj[desetiboj==0] <- NA
# Ukaz data
desetiboj
library(tidyverse)
library(psych)
library(readxl)
library(DescTools)
library(ellipse)
library(car)
desetiboj <- read_excel("Desetiboj.xlsx")
# Zbavenie sa chybajucich, resp. nulovych hodnot
desetiboj[desetiboj==0] <- NA
desetiboj <- desetiboj %>% na.omit()
# Ukaz data
desetiboj
poradi <- as_tibble(cbind(desetiboj[, 1], rowSums(desetiboj[, -1])))
# Zmena nazvu stlpcu
names(poradi) <- c("Mena", "Body")
poradi <- poradi %>% na.omit() %>% arrange(desc(Body))
poradi
# Korelacna matice
x <- cor(desetiboj[, -1], use = "pairwise.complete.obs")
x
PlotCorr(x)
p <- prcomp(x = desetiboj, center = T, scale. = T)
p <- prcomp(x = desetiboj[, -1], center = T, scale. = T)
plot(p, type="l")
p <- prcomp(x = desetiboj[, -1], center = T, scale. = T)
plot(p, type="l")
title("Scree plot")
p <- prcomp(x = desetiboj[, -1], center = T, scale. = T)
plot(p, type="l", title="Scree Plot")
title("Scree plot")
p <- prcomp(x = desetiboj[, -1], center = T, scale. = T)
plot(p, type="l", main="Scree Plot")
title("Scree plot")
p <- prcomp(x = desetiboj[, -1], center = T, scale. = T)
plot(p, type="l", main="Scree Plot")
#
p <- prcomp(x = desetiboj[, -1], center = T, scale. = T)
print(summary(p))
plot(p, type="l", main="Scree Plot")
print(summary(p))
p <- prcomp(x = desetiboj[, -1], center = T, scale. = T)
plot(p, type="l", main="Scree Plot")
f1 <-
fa(
r = desetiboj[, -1],
nfactors = 2,
rotate = "varimax",
fm = "ml",
scores = "regression",
residuals = TRUE
)
fa.diagram(f1)
f1 <-
fa(
r = desetiboj[, -1],
nfactors = 4,
rotate = "varimax",
fm = "ml",
scores = "regression",
residuals = TRUE
)
fa.diagram(f1)
f1 <-
fa(
r = desetiboj[, -1],
nfactors = 5,
rotate = "varimax",
fm = "ml",
scores = "regression",
residuals = TRUE
)
fa.diagram(f1)
f1 <-
fa(
r = desetiboj[, -1],
nfactors = 4,
rotate = "varimax",
fm = "ml",
scores = "regression",
residuals = TRUE
)
fa.diagram(f1)
summary(f1)
f1
? fa
plot(f2)
f2 <-
fa(
r = desetiboj[, -1],
nfactors = 4,
rotate = "varimax",
fm = "ml",
scores = "regression",
residuals = TRUE
)
fa.diagram(f2)
plot(f2)
unclass(f2$residual)
as.matix(unclass(f2$residual))
as.matrix(unclass(f2$residual))
unclass(f2$residual)
f1 <-
fa(
r = desetiboj[, -1],
nfactors = 4,
rotate = "varimax",
fm = "ml",
scores = "regression",
residuals = TRUE
)
fa.diagram(f1)
f1 <-
fa(
r = desetiboj[, -1],
nfactors = 4,
rotate = "varimax",
fm = "ml",
scores = "regression",
residuals = TRUE
)
fa.diagram(f1)
f2 <-
fa(
r = desetiboj[, -1],
nfactors = 3,
rotate = "varimax",
fm = "ml",
scores = "regression",
residuals = TRUE
)
fa.diagram(f2)
plot(f2)
unclass(f2$residual)
f2
f1
f2$r
f2$e.values
f2$loadings
f1$loadings
f5$loadings
f1 <-
fa(
r = desetiboj[, -1],
nfactors = 5,
rotate = "varimax",
fm = "ml",
scores = "regression",
residuals = TRUE
)
f1$loadings
f1 <-
fa(
r = desetiboj[, -1],
nfactors = 4,
rotate = "varimax",
fm = "ml",
scores = "regression",
residuals = TRUE
)
fa.diagram(f1)
f2 <-
fa(
r = desetiboj[, -1],
nfactors = 3,
rotate = "varimax",
fm = "ml",
scores = "regression",
residuals = TRUE
)
fa.diagram(f2)
f2$loadings
biplot(f2)
biplot.psych(f2)
ggbiplot(f2)
ggbiplot::ggbiplot(f2)
f2
fa.loads <- as_tibble(unclass(f2$loadings))
fa.loads$Variable <- rownames(unclass(f2$loadings))
fa.loads <- fa.loads  %>%
mutate(ML2 = abs(ML2),
ML1 = abs(ML1),
ML3 = abs(ML3))
fa.l.m <- reshape2::melt(
fa.loads,
id = "Variable",
measure = c("ML2", "ML1", "ML3"),
variable.name = "Factor",
value.name = "Loading"
)
fa.l.m <- fa.l.m %>% arrange(desc(Loading))
ggplot(fa.l.m, aes(Variable, abs(Loading), fill = Loading)) +
facet_wrap( ~ Factor, nrow = 1) + #place the factors in separate facets
geom_bar(stat = "identity") + #make the bars
coord_flip() + #flip the axes so the test names can be horizontal
#define the fill color gradient: blue=positive, red=negative
scale_fill_gradient2(
name = "Loading",
high = "blue",
mid = "white",
low = "red",
midpoint = 0,
guide = F
) +
ylab("Loading Strength") + #improve y-axis label
theme_bw(base_size = 10) #use a black-and0white theme with set font size
fa.loads <- as_tibble(unclass(f2$loadings))
fa.loads$Variable <- rownames(unclass(f2$loadings))
fa.loads <- fa.loads  %>%
mutate(ML2 = abs(ML2),
ML1 = abs(ML1),
ML3 = abs(ML3))
fa.l.m <- reshape2::melt(
fa.loads,
id = "Variable",
measure = c("ML2", "ML1", "ML3"),
variable.name = "Factor",
value.name = "Loading"
)
fa.l.m <- fa.l.m %>% arrange(desc(Loading))
ggplot(fa.l.m, aes(Variable, abs(Loading), fill = Loading)) +
facet_wrap( ~ Factor, nrow = 1) + #place the factors in separate facets
geom_bar(stat = "identity") + #make the bars
coord_flip() + #flip the axes so the test names can be horizontal
#define the fill color gradient: blue=positive, red=negative
scale_fill_gradient2(
name = "Loading",
high = "blue",
mid = "white",
low = "red",
midpoint = 0,
guide = "none"
) +
ylab("Loading Strength") + #improve y-axis label
theme_bw(base_size = 10) #use a black-and0white theme with set font size
f2
f2$residual
f2$loadings
f2
f2@u2
f2$fit
f2$fit.off
f2$factors
f2$r.scores
f2$weights
f2
View(f2)
f2$uniquenesses
f1
f2$scores
f1 <-
fa(
r = desetiboj,
nfactors = 4,
rotate = "varimax",
fm = "ml",
scores = "regression",
residuals = TRUE
)
f1 <-
fa(
r = desetiboj[, -1],
nfactors = 4,
rotate = "varimax",
fm = "ml",
scores = "regression",
residuals = TRUE
)
fa.diagram(f1)
deset.new <- cbind(desetiboj[, 1], f2$scores)
deset.new <-as_tibble(cbind(desetiboj[, 1], f2$scores))
names(deset.new) <- c("Mena", "Rychlost_Dynamika", "Vytrvalost", "Sila")
deset.new
deset.new <-as_tibble(cbind(desetiboj[, 1], f2$scores))
names(deset.new) <- c("Mena", "Rychlost_Dynamika", "Vytrvalost", "Sila")
deset.new %>% join(poradi, by="Mena")
deset.new <-as_tibble(cbind(desetiboj[, 1], f2$scores))
names(deset.new) <- c("Mena", "Rychlost_Dynamika", "Vytrvalost", "Sila")
deset.new %>% join(poradi, by="Mena") %>% arrange(desc(Body))
desetiboj
desetiboj
f2$scores
deset.new <-as_tibble(cbind(desetiboj[, 1], f2$scores))
names(deset.new) <- c("Mena", "Rychlost_Dynamika", "Sila", "Vytrvalost")
deset.new %>% join(poradi, by="Mena") %>% arrange(desc(Body))
deset.new <-as_tibble(cbind(desetiboj[, 1], f2$scores))
names(deset.new) <- c("Mena", "Rychlost_Dynamika", "Sila", "Vytrvalost")
deset.new <- deset.new %>% join(poradi, by="Mena") %>% arrange(desc(Body))
deset.new %>% filter(Rychlost_Dynamika >= 0.5 & Sila >=1)
deset.new
deset.new
deset.new <-as_tibble(cbind(desetiboj[, 1], f2$scores))
names(deset.new) <- c("Mena", "Rychlost_Dynamika", "Sila", "Vytrvalost")
deset.new <- deset.new %>% join(poradi, by="Mena") %>% arrange(desc(Body))
deset.new
deset.new <-as_tibble(cbind(desetiboj[, 1], f2$scores))
names(deset.new) <- c("Mena", "Rychlost_Dynamika", "Sila", "Vytrvalost")
deset.new <- deset.new %>% plyr::join(poradi, by="Mena") %>% arrange(desc(Body))
deset.new
